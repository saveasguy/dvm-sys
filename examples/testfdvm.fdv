        program testfdvm
     
      call sh2101
      end
C ---------------------------------------------SH2101
      subroutine SH2101
     
      parameter( N = 16,M=8, PN = 2,NL=1000)

c dvm$ processors P(PN,PN)      
      
      integer  A(N,M), B(N,M), C(N,M)
      integer nloopi,nloopj,isum
      character*6 tname 
cdvm$ distribute B(BLOCK,BLOCK)   
    
cdvm$ align (I,J) with B(I,J) ::A
      tname='T_FDVM'     
      NNL=NL    
      call serial2(C,N,M,NNL)
      nloopi=NL
      nloopj=NL
*dvm$ parallel (i,j) on A(i,j)
      do 10 i=1,N
        DO j=1,M
         A(i,j) = NL+i+j
       enddo
  10   continue                                                
 
cdvm$ parallel (i,j) on B(i,j),shadow_renew(A(CORNER))
      do i=2,N-1
       do 50 j=2,M-1
         B(i,j) = A(i+1,j)+A(i,j+1)+A(i-1,j)+A(i,j-1)+
     *A(i-1,j-1)+ A(i+1,j+1)+A(i-1,j+1)+A(i+1,j-1)
          
   50    continue
      enddo
  
*dvm$ parallel (i,j) on B(i,j), reduction( min( nloopi),min(nloopj))
       do  i=2,N-1
       do  j=2,M-1
       isum = C(i+1,j)+C(i,j+1)+C(i-1,j)+C(i,j-1)+
     *C(i-1,j-1)+ C(i+1,j+1)+C(i-1,j+1)+C(i+1,j-1)
       
          if (B(i,j).ne.isum) then
         
           nloopi=min(nloopi,i)
           nloopj=min(nloopj,j)
           endif
        enddo
        enddo
      if (nloopi .eq.NL) then
      call ansyes(tname)
       else
      call ansno(tname)
      endif
      end

C -----------------------------------------------         
      subroutine serial2(AR,N,M,NL)
      integer AR(N,M)
      integer NL 
      do 10 i=1,N
      DO 10 j=1,M
   10 AR(i,j) = NL+i+j
                 
      end 
    


      subroutine ansyes(name)
      character*6 name
      print *,name,'  -  complete'
      end
      subroutine ansno(name)
      character*6 name
      print *,name,'  -  ***error'
      end
