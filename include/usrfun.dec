#ifndef _USRFUN_DEC_
#define _USRFUN_DEC_
/******************/    /*E0000*/

/************************************************\
* Prototypes of functions to be used             *
*         in user program                        *
\************************************************/    /*E0001*/

/* */    /*E0002*/

DVMUSERFUN
t_tracer_time   __callstd  tracer_get_time_(void);


/* */    /*E0003*/

DVMUSERFUN
int   __callstd  dvmifpc_(void);
DVMUSERFUN
int   __callstd  dvmifstoreexist_(void);
DVMUSERFUN
void  __callstd  dvmremove_(char  *FileNamePtr, int  FileNameLength);
DVMUSERFUN
int   __callstd  dvmgetprocessorname_(int   *ProcNumberPtr,
                                      char  *ProcName,
                                      int   StringLength);
DVMUSERFUN
void  __callstd  dvmcommrank_(int  *MyRankPtr);
DVMUSERFUN
void  __callstd  dvmcommsize_(int  *MySizePtr);
DVMUSERFUN
void  __callstd  dvmgetach_(AddrType  *AddrPtr, char  *Ptr, int  Len);
DVMUSERFUN
void  __callstd  dvmgetaf_(AddrType  *AddrPtr, float  *Ptr);
DVMUSERFUN
void  __callstd  dvmsend_(void  *sendbufPtr, int  *countPtr,
                          int  *TypePtr, int  *destPtr,
                          int  *tagPtr);
DVMUSERFUN
void  __callstd  dvmrecv_(void  *recvbufPtr, int  *countPtr,
                          int  *TypePtr, int  *sourcePtr,
                          int  *tagPtr);
DVMUSERFUN
void  __callstd  dvmsendrecv_(void  *sendbufPtr,
                              int  *sendcountPtr, int  *SendTypePtr,
                              int  *destPtr,
                              void  *recvbufPtr,
                              int  *recvcountPtr, int  *RecvTypePtr,
                              int  *sourcePtr, int  *tagPtr);
DVMUSERFUN
void  __callstd  dvmiprobe_(int  *destPtr, int  *tagPtr,
                            int  *flagPtr);
DVMUSERFUN
void  __callstd  dvmreduce_(void *sendbufPtr, void  *recvbufPtr,
                            int  *countPtr, int  *RedTypePtr,
                            int  *OpTypePtr, int  *rootPtr);
DVMUSERFUN
int   __callstd  dvmbarrier_(void);
DVMUSERFUN
int   __callstd  dvminit_(void);
DVMUSERFUN
int   __callstd  dvmexit_(void);

/* ------------------------------ */    /*E0004*/

DVMUSERFUN
void  __callstd  getwrpar_(int *irankPtr, int *p);
DVMUSERFUN
void  __callstd  filldisk_(int *nlinesPtr, double *twPtr, int *p);
DVMUSERFUN
void  __callstd  wrline_(int *ibrecPtr, int *p);
DVMUSERFUN
void  __callstd  tsttst_(int *nlinesPtr, int *ncalcPtr, int *nrepPtr,
                         double *tdPtr, double *tcPtr, int *p);
DVMUSERFUN
void  __callstd  initwaitdisk_(int *p);
DVMUSERFUN
void  __callstd  waitdisk_(int *p);
DVMUSERFUN
void  __callstd  freedisk_(int *p);
DVMUSERFUN
void  __callstd  finaldisk_(int *p);
DVMUSERFUN
void  __callstd  skipopenclosedisk_(int *num_skip_send_by_destPtr,
                                    int *p);
DVMUSERFUN
void  __callstd  outoutinfotime_(float *timPtr, int *p);
DVMUSERFUN
void  __callstd  rdline_(int *ibrecPtr, int *p);
DVMUSERFUN
void  __callstd  waitline_(int *p);
DVMUSERFUN
void  __callstd  calccalc_(int *mPtr, int *ncalcPtr, int *p);

DVMUSERFUN
void  __callstd  dvmprinttime_(void);

/* ------------------------------ */    /*E0005*/

DVMUSERFUN
DvmType  __callstd  linit_(DvmType *InitParamPtr);
DVMUSERFUN
void  __callstd tpcntr_(DvmType     *ElmNumberPtr,
                        AddrType  FirstAddrArray[],
                        AddrType  NextAddrArray[],
                        DvmType      TypeLengthArray[],
                        DvmType      TypeCodeArray[]   );
DVMUSERFUN
void  __callstd ftcntr_( int     *ElmNumberPtr,
                         AddrType  FirstAddrArray[],
                         AddrType  NextAddrArray[],
                         int      TypeLengthArray[],
                         int      TypeCodeArray[] );
DVMUSERFUN
DvmType       rtl_init(DvmType    InitParam,
                        int     argc,
                        char   *argv[]      );
DVMUSERFUN
DvmType  __callstd  lexit_(DvmType *UserResPtr);

DVMUSERFUN
AMRef     __callstd  getam_(void);
DVMUSERFUN
AMViewRef __callstd  crtamv_(AMRef      *AMRefPtr,
                             DvmType       *RankPtr,
                             DvmType        SizeArray[],
                             DvmType       *StaticSignPtr );
DVMUSERFUN
AMRef     __callstd  getamr_(AMViewRef  *AMViewRefPtr,
                             DvmType        IndexArray[]  );
DVMUSERFUN
DvmType      __callstd  delamv_(AMViewRef  *AMViewRefPtr);

DVMUSERFUN
PSRef     __callstd  getps_(AMRef  *AMRefPtr);
DVMUSERFUN
PSRef     __callstd  crtps_(PSRef  *PSRefPtr,
                            DvmType    InitIndexArray[],
                            DvmType    LastIndexArray[],
                            DvmType   *StaticSignPtr     );
DVMUSERFUN
PSRef     __callstd psview_(PSRef  *PSRefPtr,
                            DvmType   *RankPtr,
                            DvmType    SizeArray[],
                            DvmType   *StaticSignPtr     );
DVMUSERFUN
DvmType   __callstd  delps_(PSRef  *PSRefPtr);
DVMUSERFUN
DvmType   __callstd setpsw_(PSRef      *PSRefPtr,
                            AMViewRef  *AMViewRefPtr,
                            double      CoordWeightArray[],
                            DvmType       *GenBlockSignPtr);
DVMUSERFUN
DvmType   __callstd genblk_(PSRef      *PSRefPtr,
                            AMViewRef  *AMViewRefPtr,
                            AddrType    AxisWeightAddr[],
                            DvmType       *AxisCountPtr,
                            DvmType       *DoubleSignPtr     );
DVMUSERFUN
DvmType   __callstd genbli_(PSRef      *PSRefPtr,
                            AMViewRef  *AMViewRefPtr,
                            AddrType    AxisWeightAddr[],
                            DvmType       *AxisCountPtr      );
DVMUSERFUN
DvmType   __callstd genbld_(PSRef      *PSRefPtr,
                            AMViewRef  *AMViewRefPtr,
                            AddrType    AxisWeightAddr[],
                            DvmType       *AxisCountPtr      );
DVMUSERFUN
DvmType   __callstd blkdiv_(AMViewRef *AMViewRefPtr, DvmType  AMVAxisDiv[],
                            DvmType *AMVAxisCountPtr);
DVMUSERFUN
DvmType   __callstd setelw_(PSRef      *PSRefPtr,
                            AMViewRef  *AMViewRefPtr,
                            AddrType    LoadWeightAddr[], 
                            DvmType        WeightNumber[],
                            DvmType       *AddrNumberPtr     );

DVMUSERFUN
DvmType   __callstd setgrn_(AMViewRef  *AMViewRefPtr,
                            DvmType    *AxisPtr,
                            DvmType    *GroupNumberPtr    );
DVMUSERFUN
DvmType   __callstd getwar_(double      WeightArray[],
                            AMViewRef  *AMViewRefPtr,
                            DvmType    *AxisPtr           );
DVMUSERFUN
DvmType   __callstd gettar_(double      WeightArray[],
                            AMViewRef  *AMViewRefPtr,
                            DvmType    *AxisPtr           );
DVMUSERFUN
DvmType   __callstd rsttar_(AMViewRef  *AMViewRefPtr,
                            DvmType    *AxisPtr           );

DVMUSERFUN
DvmType   __callstd  distr_(AMViewRef  *AMViewRefPtr,
                            PSRef      *PSRefPtr,
                            DvmType     *ParamCountPtr,
                            DvmType     AxisArray[],
                            DvmType     DistrParamArray[]  );
DVMUSERFUN
DvmType   __callstd  redis_(AMViewRef  *AMViewRefPtr,
                            PSRef      *PSRefPtr,
                            DvmType    *ParamCountPtr,
                            DvmType    AxisArray[],
                            DvmType    DistrParamArray[],
                            DvmType    *NewSignPtr         );

DVMUSERFUN
AMViewMapRef __callstd amvmap_(AMViewRef     *AMViewRefPtr,
                               DvmType       *StaticSignPtr  );
DVMUSERFUN
DvmType      __callstd mdistr_(AMViewRef     *AMViewRefPtr,
                               PSRef         *PSRefPtr, 
                               AMViewMapRef  *AMViewMapRefPtr );
DVMUSERFUN
DvmType      __callstd mredis_(AMViewRef     *AMViewRefPtr,
                               PSRef         *PSRefPtr, 
                               AMViewMapRef  *AMViewMapRefPtr,
                               DvmType          *NewSignPtr      );
DVMUSERFUN
DvmType      __callstd delmvm_(AMViewMapRef  *AMViewMapRefPtr );

DVMUSERFUN
DvmType      __callstd  crtda_ (DvmType   ArrayHeader[],
                                DvmType  *ExtHdrSignPtr,  
                                void  *BasePtr,
                                DvmType  *RankPtr,
                                DvmType  *TypeSizePtr,
                                DvmType   SizeArray[],
                                DvmType  *StaticSignPtr,
                                DvmType  *ReDistrSignPtr,
                                DvmType   LowShdWidthArray[],
                                DvmType   HiShdWidthArray[]   );
DVMUSERFUN
DvmType      __callstd  crtda9_(DvmType       ArrayHeader[],
                                DvmType      *ExtHdrSignPtr,  
                                AddrType  *BasePtrAddr,
                                DvmType      *RankPtr,
                                DvmType      *TypeSizePtr,
                                DvmType       SizeArray[],
                                DvmType      *StaticSignPtr,
                                DvmType      *ReDistrSignPtr,
                                DvmType       LowShdWidthArray[],
                                DvmType       HiShdWidthArray[]   );
DVMUSERFUN
DvmType     __callstd  crtrda_(DvmType   ArrayHeader[],
                               DvmType  *ExtHdrSignPtr,  
                               void  *BasePtr,
                               DvmType  *RankPtr,
                               DvmType  *TypeSizePtr,
                               DvmType   SizeArray[],
                               DvmType  *StaticSignPtr,
                               DvmType  *ReDistrSignPtr,
                               void  *MemPtr          );
DVMUSERFUN
DvmType     __callstd  crtraf_(DvmType       ArrayHeader[],
                               DvmType      *ExtHdrSignPtr,
                               void      *BasePtr,
                               DvmType      *RankPtr,
                               DvmType      *TypeSizePtr,
                               DvmType       SizeArray[],
                               DvmType      *StaticSignPtr,
                               DvmType      *ReDistrSignPtr,
                               AddrType  *MemAddrPtr);
DVMUSERFUN
DvmType     __callstd  crtra9_(DvmType       ArrayHeader[],
                               DvmType      *ExtHdrSignPtr,
                               AddrType  *BasePtrAddr,
                               DvmType      *RankPtr,
                               DvmType      *TypeSizePtr,
                               DvmType       SizeArray[],
                               DvmType      *StaticSignPtr,
                               DvmType      *ReDistrSignPtr,
                               AddrType  *MemAddrPtr);
DVMUSERFUN
DvmType    __callstd    delda_(DvmType ArrayHeader[]);

DVMUSERFUN
DvmType    __callstd   dacsum_(DvmType       ArrayHeader[],
                               double    *CheckSumPtr);
DVMUSERFUN
DvmType    __callstd   getdas_(DvmType       ArrayHeader[],
                               double    *CheckSumPtr);
DVMUSERFUN
DvmType    __callstd   arcsum_(void      *MemPtr,
                               DvmType      *RankPtr,
                               DvmType       SizeArray[],
                               DvmType      *TypePtr,
                               double    *CheckSumPtr);
DVMUSERFUN
DvmType    __callstd    arcsf_(AddrType  *MemAddrPtr,
                               DvmType      *RankPtr,
                               DvmType       SizeArray[],
                               DvmType      *TypePtr,
                               double    *CheckSumPtr);

DVMUSERFUN
DvmType    __callstd   addhdr_(DvmType NewArrayHeader[],
                               DvmType ArrayHeader[]     );
DVMUSERFUN
DvmType    __callstd   delhdr_(DvmType ArrayHeader[]);

DVMUSERFUN
DvmType    __callstd    align_(DvmType         ArrayHeader[],
                               PatternRef  *PatternRefPtr,
                               DvmType         AxisArray[],
                               DvmType         CoeffArray[],
                               DvmType         ConstArray[]   );
DVMUSERFUN
DvmType    __callstd    realn_(DvmType         ArrayHeader[],   
                               PatternRef  *PatternRefPtr,
                               DvmType         AxisArray[],
                               DvmType         CoeffArray[],
                               DvmType         ConstArray[],
                               DvmType        *NewSignPtr     );
DVMUSERFUN
AMViewRef  __callstd   getamv_(DvmType  ArrayHeader[]);

DVMUSERFUN
ArrayMapRef  __callstd arrmap_(DvmType          ArrayHeader[],
                               DvmType         *StaticSignPtr  );
DVMUSERFUN
DvmType      __callstd malign_(DvmType          ArrayHeader[],
                               AMViewRef    *AMViewRefPtr,
                               ArrayMapRef  *ArrayMapRefPtr );
DVMUSERFUN
DvmType      __callstd mrealn_(DvmType          ArrayHeader[],
                               AMViewRef    *AMViewRefPtr,
                               ArrayMapRef  *ArrayMapRefPtr,
                               DvmType         *NewSignPtr     );
DVMUSERFUN
DvmType      __callstd delarm_(ArrayMapRef  *ArrayMapRefPtr);

DVMUSERFUN
DvmType    __callstd    begbl_(void);
DVMUSERFUN
DvmType    __callstd    endbl_(void);

DVMUSERFUN
LoopRef    __callstd    crtpl_(DvmType           *RankPtr);
DVMUSERFUN
DvmType    __callstd    mappl_(LoopRef        *LoopRefPtr,
                               PatternRef     *PatternRefPtr,
                               DvmType            AxisArray[],
                               DvmType            CoeffArray[],
                               DvmType            ConstArray[],
                               AddrType        LoopVarAddrArray[],
                               DvmType            LoopVarTypeArray[],
                               DvmType            InInitIndexArray[],
                               DvmType            InLastIndexArray[],
                               DvmType            InStepArray[],
                               DvmType            OutInitIndexArray[],
                               DvmType            OutLastIndexArray[],
                               DvmType            OutStepArray[]       );
DVMUSERFUN
ArrayMapRef  __callstd  plmap_(LoopRef        *LoopRefPtr,
                               DvmType           *StaticSignPtr  );
DVMUSERFUN
DvmType      __callstd    exfrst_(LoopRef        *LoopRefPtr,
                                  ShadowGroupRef *ShadowGroupRefPtr  );
DVMUSERFUN
DvmType      __callstd    imlast_(LoopRef        *LoopRefPtr,
                                  ShadowGroupRef *ShadowGroupRefPtr  );
DVMUSERFUN
DvmType      __callstd    addbnd_(void);
DVMUSERFUN
DvmType      __callstd    addshd_(DvmType            ArrayHeader[],
                                  DvmType            LowShdWidthArray[],
                                  DvmType            HiShdWidthArray[]  );
DVMUSERFUN
DvmType      __callstd     setba_(void);
DVMUSERFUN
DvmType      __callstd     rstba_(void);
DVMUSERFUN
DvmType      __callstd    across_(DvmType           *AcrossTypePtr,
                                  ShadowGroupRef *OldShadowGroupRefPtr,
                                  ShadowGroupRef *NewShadowGroupRefPtr,
                                  double         *PipeLineParPtr        );
DVMUSERFUN
DvmType      __callstd     doacr_(DvmType           *AcrossTypePtr,
                               ShadowGroupRef *AcrShadowGroupRefPtr,
                               double         *PipeLineParPtr        );
DVMUSERFUN
DvmType      __callstd      dopl_(LoopRef        *LoopRefPtr);
DVMUSERFUN
DvmType      __callstd     endpl_(LoopRef        *LoopRefPtr);

DVMUSERFUN
DvmType   __callstd     mapam_(AMRef        *AMRefPtr,
                               PSRef        *PSRefPtr );
DVMUSERFUN
DvmType   __callstd     runam_(AMRef        *AMRefPtr);
DVMUSERFUN
DvmType   __callstd    stopam_(void);

DVMUSERFUN
RedRef    __callstd     crtred_(DvmType         *RedFuncNumbPtr,
                                void         *RedArrayPtr,
                                DvmType         *RedArrayTypePtr,
                                DvmType         *RedArrayLengthPtr,
                                void         *LocArrayPtr,
                                DvmType         *LocElmLengthPtr,
                                DvmType         *StaticSignPtr      );
DVMUSERFUN
DvmType   __callstd     lindtp_(RedRef       *RedRefPtr,
                                DvmType         *LocIndTypePtr);
DVMUSERFUN
RedRef    __callstd     crtrdf_(DvmType         *RedFuncNumbPtr,
                                AddrType     *RedArrayAddrPtr,
                                DvmType         *RedArrayTypePtr,
                                DvmType         *RedArrayLengthPtr,
                                void         *LocArrayPtr,
                                DvmType         *LocElmLengthPtr,
                                DvmType         *StaticSignPtr      );
DVMUSERFUN
RedGroupRef  __callstd   crtrg_(DvmType         *StaticSignPtr,
                                DvmType         *DelRedSignPtr    );
DVMUSERFUN
DvmType      __callstd  insred_(RedGroupRef  *RedGroupRefPtr,
                                RedRef       *RedRefPtr,
                                PSSpaceRef   *PSSpaceRefPtr,
                                DvmType         *RenewSignPtr   );
DVMUSERFUN
DvmType      __callstd  saverg_(RedGroupRef  *RedGroupRefPtr);
DVMUSERFUN
DvmType      __callstd  saverv_(RedRef       *RedRefPtr);
DVMUSERFUN
DvmType      __callstd  strtrd_(RedGroupRef  *RedGroupRefPtr);
DVMUSERFUN
DvmType      __callstd  waitrd_(RedGroupRef  *RedGroupRefPtr);
DVMUSERFUN
DvmType      __callstd   delrg_(RedGroupRef  *RedGroupRefPtr);
DVMUSERFUN
DvmType      __callstd   rstrg_(RedGroupRef  *RedGroupRefPtr,
                                DvmType         *DelRedSignPtr);
DVMUSERFUN
DvmType      __callstd  delred_(RedRef       *RedRefPtr);

DVMUSERFUN
ShadowGroupRef __callstd crtshg_(DvmType            *StaticSignPtr);
DVMUSERFUN
DvmType        __callstd  inssh_(ShadowGroupRef  *ShadowGroupRefPtr,
                                 DvmType             ArrayHeader[],
                                 DvmType             LowShdWidthArray[],
                                 DvmType             HiShdWidthArray[],
                                 DvmType            *FullShdSignPtr     );
DVMUSERFUN
DvmType       __callstd insshd_(ShadowGroupRef  *ShadowGroupRefPtr,
                                 DvmType             ArrayHeader[],
                                 DvmType             LowShdWidthArray[],
                                 DvmType             HiShdWidthArray[],
                                 DvmType            *MaxShdCountPtr,
                                 DvmType             ShdSignArray[]     );
DVMUSERFUN
DvmType       __callstd  incsh_(ShadowGroupRef  *ShadowGroupRefPtr,
                                 DvmType             ArrayHeader[],
                                 DvmType             InitDimIndex[],
                                 DvmType             LastDimIndex[],
                                 DvmType             InitLowShdIndex[],
                                 DvmType             LastLowShdIndex[],
                                 DvmType             InitHiShdIndex[],
                                 DvmType             LastHiShdIndex[],
                                 DvmType            *FullShdSignPtr     );
DVMUSERFUN
DvmType       __callstd incshd_(ShadowGroupRef  *ShadowGroupRefPtr,
                                 DvmType             ArrayHeader[],
                                 DvmType             InitDimIndex[],
                                 DvmType             LastDimIndex[],
                                 DvmType             InitLowShdIndex[],
                                 DvmType             LastLowShdIndex[],
                                 DvmType             InitHiShdIndex[],
                                 DvmType             LastHiShdIndex[],
                                 DvmType            *MaxShdCountPtr,
                                 DvmType             ShdSignArray[]     );
DVMUSERFUN
DvmType           __callstd strtsh_(ShadowGroupRef  *ShadowGroupRefPtr);
DVMUSERFUN
DvmType           __callstd recvsh_(ShadowGroupRef  *ShadowGroupRefPtr);
DVMUSERFUN
DvmType           __callstd sendsh_(ShadowGroupRef  *ShadowGroupRefPtr);
DVMUSERFUN
DvmType           __callstd recvla_(ShadowGroupRef  *ShadowGroupRefPtr);
DVMUSERFUN
DvmType           __callstd sendsa_(ShadowGroupRef  *ShadowGroupRefPtr);
DVMUSERFUN
DvmType           __callstd waitsh_(ShadowGroupRef  *ShadowGroupRefPtr);
DVMUSERFUN
DvmType           __callstd delshg_(ShadowGroupRef  *ShadowGroupRefPtr); 
DVMUSERFUN
DvmType           __callstd rstshg_(ShadowGroupRef  *ShadowGroupRefPtr); 

DVMUSERFUN
DvmType    __callstd  rwelm_(DvmType   FromArrayHeader[],
                             DvmType   ToArrayHeader[],
                             DvmType   IndexArray[]       );
DVMUSERFUN
DvmType    __callstd rwelmf_(DvmType   FromArrayHeader[],
                             AddrType  *ToArrayHeaderPtr,
                             DvmType       IndexArray[]       );
DVMUSERFUN
DvmType    __callstd copelm_(DvmType   FromArrayHeader[],
                             DvmType   FromIndexArray[],
                             DvmType   ToArrayHeader[],
                             DvmType   ToIndexArray[]     );
DVMUSERFUN
DvmType   __callstd  elmcpy_(DvmType   FromArrayHeader[],
                             DvmType   FromIndexArray[],
                             DvmType   ToArrayHeader[],
                             DvmType   ToIndexArray[],
                             DvmType  *CopyRegimPtr       );
DVMUSERFUN
DvmType   __callstd  arrcpy_(DvmType   FromArrayHeader[],
                             DvmType   FromInitIndexArray[],
                             DvmType   FromLastIndexArray[],
                             DvmType   FromStepArray[],
                             DvmType   ToArrayHeader[],
                             DvmType   ToInitIndexArray[],
                             DvmType   ToLastIndexArray[],
                             DvmType   ToStepArray[],
                             DvmType  *CopyRegimPtr          );

DVMUSERFUN
DvmType   __callstd  arwelm_(DvmType       FromArrayHeader[],
                             DvmType       ToArrayHeader[],
                             DvmType       IndexArray[],
                             AddrType  *CopyFlagPtr       );
DVMUSERFUN
DvmType    __callstd arwelf_(DvmType       FromArrayHeader[],
                             AddrType  *ToArrayHeaderPtr,
                             DvmType       IndexArray[],
                             AddrType  *CopyFlagPtr       );
DVMUSERFUN
DvmType    __callstd acopel_(DvmType       FromArrayHeader[],
                             DvmType       FromIndexArray[],
                             DvmType       ToArrayHeader[],
                             DvmType       ToIndexArray[],
                             AddrType  *CopyFlagPtr       );
DVMUSERFUN
DvmType    __callstd aelmcp_(DvmType       FromArrayHeader[],
                             DvmType       FromIndexArray[],
                             DvmType       ToArrayHeader[],
                             DvmType       ToIndexArray[],
                             DvmType      *CopyRegimPtr,
                             AddrType  *CopyFlagPtr       );
DVMUSERFUN
DvmType    __callstd aarrcp_(DvmType       FromArrayHeader[],
                             DvmType       FromInitIndexArray[],
                             DvmType       FromLastIndexArray[],
                             DvmType       FromStepArray[],
                             DvmType       ToArrayHeader[],
                             DvmType       ToInitIndexArray[],
                             DvmType       ToLastIndexArray[],
                             DvmType       ToStepArray[],
                             DvmType      *CopyRegimPtr,
                             AddrType  *CopyFlagPtr          );
DVMUSERFUN
DvmType    __callstd waitcp_(AddrType  *CopyFlafPtr);

DVMUSERFUN
DvmType    __callstd  tstelm_(DvmType   ArrayHeader[],
                              DvmType   IndexArray[]   );
DVMUSERFUN
DvmType    __callstd  locind_(DvmType   ArrayHeader[],
                              DvmType   InitIndexArray[],
                              DvmType   LastIndexArray[]  );
DVMUSERFUN
DvmType    __callstd  pllind_(DvmType   InitIndexArray[],
                              DvmType   LastIndexArray[],
                              DvmType   StepArray[]       );
DVMUSERFUN
DvmType    __callstd  exlind_(DvmType   ArrayHeader[],
                              DvmType   InitIndexArray[],
                              DvmType   LastIndexArray[]  );
DVMUSERFUN
DvmType    __callstd  rlocel_(DvmType   ArrayHeader[],
                              DvmType   IndexArray[],
                              void  *BufferPtr       );
DVMUSERFUN
DvmType    __callstd  wlocel_(void  *BufferPtr,
                              DvmType   ArrayHeader[],
                              DvmType   IndexArray[]    );
DVMUSERFUN
DvmType    __callstd  clocel_(DvmType   FromArrayHeader[],
                              DvmType   FromIndexArray[],
                              DvmType   ToArrayHeader[],
                              DvmType   ToIndexArray[]      );
DVMUSERFUN
char           *GetLocElmAddr(DvmType   ArrayHeader[],
                              DvmType   IndexArray[]    );
DVMUSERFUN
DvmType    __callstd  setind_(DvmType   ArrayHeader[],
                              DvmType   InitIndexArray[],
                              DvmType   LastIndexArray[],
                              DvmType   StepArray[]       );
DVMUSERFUN
DvmType    __callstd  getind_(DvmType   ArrayHeader[],
                              DvmType   NextIndexArray[]  );

DVMUSERFUN
DvmType    __callstd crtrbl_(DvmType      RemArrayHeader[],
                             DvmType      BufferHeader[],
                             void     *BasePtr,
                             DvmType     *StaticSignPtr,
                             LoopRef  *LoopRefPtr,
                             DvmType      AxisArray[],
                             DvmType      CoeffArray[],
                             DvmType      ConstArray[]   );
DVMUSERFUN
DvmType    __callstd crtrba_(DvmType      RemArrayHeader[],
                             DvmType      BufferHeader[],
                             void     *BasePtr,
                             DvmType     *StaticSignPtr,
                             DvmType      LocArrayHeader[],
                             DvmType      AxisArray[],
                             DvmType      CoeffArray[],
                             DvmType      ConstArray[]     );
DVMUSERFUN
DvmType   __callstd  crtrbp_(DvmType      RemArrayHeader[],
                             DvmType      BufferHeader[],
                             void     *BasePtr,
                             DvmType     *StaticSignPtr,
                             PSRef    *PSRefPtr,
                             DvmType      CoordArray[]     );
DVMUSERFUN
DvmType    __callstd loadrb_(DvmType   BufferHeader[],
                             DvmType  *RenewSignPtr   );
DVMUSERFUN
DvmType    __callstd waitrb_(DvmType   BufferHeader[]);
DVMUSERFUN
DvmType    __callstd  delrb_(DvmType   BufferHeader[]);
DVMUSERFUN
RegularAccessGroupRef  __callstd  crtbg_(DvmType   *StaticSignPtr,
                                         DvmType   *DelBufSignPtr );
DVMUSERFUN
DvmType    __callstd  insrb_(RegularAccessGroupRef  *RegularAccessGroupRefPtr,
                             DvmType                 BufferHeader[]          );
DVMUSERFUN
DvmType    __callstd loadbg_(RegularAccessGroupRef  *RegularAccessGroupRefPtr,
                          DvmType                *RenewSignPtr            );
DVMUSERFUN
DvmType    __callstd waitbg_(RegularAccessGroupRef  *RegularAccessGroupRefPtr);
DVMUSERFUN
DvmType    __callstd  delbg_(RegularAccessGroupRef  *RegularAccessGroupRefPtr);
DVMUSERFUN
DvmType    __callstd  rstbg_(RegularAccessGroupRef  *RegularAccessGroupRefPtr,
                             DvmType                *DelBufSignPtr);

DVMUSERFUN
DvmType    __callstd strtac_(DvmType      ArrayHeader[],
                                     LoopRef  *LoopRefPtr,
                                     DvmType      AxisArray[],
                                     DvmType      CoeffArray[],
                                     DvmType      ConstArray[],
                                     DvmType     *RenewSignPtr   );
DVMUSERFUN
DvmType    __callstd waitac_(DvmType      ArrayHeader[]);
DVMUSERFUN
DvmType    __callstd rstrda_(DvmType      ArrayHeader[]);
DVMUSERFUN
DAConsistGroupRef  __callstd  crtcg_(DvmType     *StaticSignPtr,
                                     DvmType     *DelDASignPtr);
DVMUSERFUN
DvmType    __callstd  inscg_(DAConsistGroupRef
                                              *DAConsistGroupRefPtr,
                                     DvmType      ArrayHeader[],
                                     LoopRef  *LoopRefPtr,
                                     DvmType      AxisArray[],
                                     DvmType      CoeffArray[],
                                     DvmType      ConstArray[],
                                     DvmType     *RenewSignPtr  );
DVMUSERFUN
DvmType    __callstd strtcg_(DAConsistGroupRef
                                              *DAConsistGroupRefPtr);
DVMUSERFUN
DvmType    __callstd waitcg_(DAConsistGroupRef
                                              *DAConsistGroupRefPtr);
DVMUSERFUN
DvmType    __callstd  delcg_(DAConsistGroupRef
                                              *DAConsistGroupRefPtr);
DVMUSERFUN
DvmType    __callstd  rstcg_(DAConsistGroupRef
                                              *DAConsistGroupRefPtr,
                                     DvmType     *DelDASignPtr);
DVMUSERFUN
DvmType    __callstd consda_(DvmType        ArrayHeader[],
                                     AMViewRef  *AMViewRefPtr,
                                     DvmType       *ArrayAxis,
                                     DvmType       *RenewSignPtr);
DVMUSERFUN
DvmType    __callstd inclcg_(DAConsistGroupRef
                                                *DAConsistGroupRefPtr,
                                     DvmType        ArrayHeader[],
                                     AMViewRef  *AMViewRefPtr,
                                     DvmType       *ArrayAxisPtr,
                                     DvmType       *RenewSignPtr  );

DVMUSERFUN
DvmType   __callstd  crtibl_(DvmType       RemArrayHeader[],
                             DvmType       BufferHeader[],
                             void      *BasePtr,
                             DvmType      *StaticSignPtr,
                             LoopRef   *LoopRefPtr,
                             DvmType       MEHeader[],
                             DvmType       ConstArray[]   );
DVMUSERFUN
DvmType   __callstd   crtib_(DvmType       RemArrayHeader[],
                             DvmType       BufferHeader[],
                             void      *BasePtr,
                             DvmType      *StaticSignPtr,
                             DvmType       MEHeader[],
                             DvmType       ConstArray[]   );
DVMUSERFUN
DvmType    __callstd loadib_(DvmType   BufferHeader[],
                             DvmType  *RenewSignPtr   );
DVMUSERFUN
DvmType    __callstd waitib_(DvmType   BufferHeader[] );
DVMUSERFUN
DvmType    __callstd  delib_(DvmType   BufferHeader[] );
DVMUSERFUN
IndirectAccessGroupRef  __callstd  crtig_(DvmType   *StaticSignPtr,
                                          DvmType   *DelBufSignPtr );
DVMUSERFUN
DvmType __callstd  insib_(IndirectAccessGroupRef  *IndirectAccessGroupRefPtr,
                          DvmType                 BufferHeader[]            );
DVMUSERFUN
DvmType __callstd loadig_(IndirectAccessGroupRef  *IndirectAccessGroupRefPtr,
                          DvmType                 *RenewSignPtr              );
DVMUSERFUN
DvmType __callstd waitig_(IndirectAccessGroupRef  *IndirectAccessGroupRefPtr );
DVMUSERFUN
DvmType __callstd  delig_(IndirectAccessGroupRef  *IndirectAccessGroupRefPtr );

DVMUSERFUN
DvmType __callstd  rmkind_(DvmType  ArrayHeader[], DvmType  BufferHeader[],
                          void *BasePtr, DvmType *StaticSignPtr,
                          LoopRef *LoopRefPtr, DvmType  AxisArray[],
                          DvmType  CoeffArray[], DvmType  ConstArray[],
                          DvmType  LowShdWidthArray[],
                          DvmType  HiShdWidthArray[]);

DVMUSERFUN
DvmType    __callstd    tstda_(ObjectRef  *ObjectRefPtr);
DVMUSERFUN
DvmType    __callstd   getrnk_(ObjectRef  *ObjectRefPtr);
DVMUSERFUN
DvmType    __callstd   getsiz_(ObjectRef  *ObjectRefPtr,
                               DvmType    *AxisPtr       );
DVMUSERFUN
DvmType    __callstd   locsiz_(ObjectRef  *ObjectRefPtr,
                               DvmType    *AxisPtr       );
DVMUSERFUN
DvmType    __callstd   exlsiz_(DvmType ArrayHeader[],
                               DvmType *AxisPtr);
DVMUSERFUN
DvmType    __callstd   getlen_(DvmType    ArrayHeader[]);
DVMUSERFUN
DvmType    __callstd   delobj_(ObjectRef  *ObjectRefPtr);
DVMUSERFUN
DvmType    __callstd    tstio_(void);
DVMUSERFUN
DvmType    __callstd    srmem_(DvmType       *MemoryCountPtr,
                               AddrType    StartAddrArray[],
                               DvmType        LengthArray[]     );
DVMUSERFUN
AddrType   __callstd   dvmadr_(void       *VarPtr);
DVMUSERFUN
AddrType   __callstd   getash_(void       *VarPtr);
DVMUSERFUN
AddrType   __callstd    getai_(void       *VarPtr);
DVMUSERFUN
AddrType   __callstd    getal_(void       *VarPtr);
DVMUSERFUN
AddrType   __callstd    getaf_(void       *VarPtr);
DVMUSERFUN
AddrType   __callstd    getad_(void       *VarPtr);
DVMUSERFUN
AddrType   __callstd    getac_(void       *VarPtr);
DVMUSERFUN
AddrType   __callstd   getach_(char       *VarPtr, DvmType  StrLength);

DVMUSERFUN
void       __callstd     biof_(void);
DVMUSERFUN
void       __callstd     eiof_(void);

DVMUSERFUN
DvmType    __callstd   acsend_(LoopRef    *LoopRefPtr,
                               AddrType   *MemAddrPtr,
                               DvmType       *ElmTypePtr,
                               DvmType       *ElmNumberPtr);
DVMUSERFUN
DvmType    __callstd   acrecv_(LoopRef    *LoopRefPtr,
                               AddrType   *MemAddrPtr,
                               DvmType       *ElmTypePtr,
                               DvmType       *ElmNumberPtr);

DVMUSERFUN
DvmType    __callstd    bcast_(AddrType   *ArrayAddrPtr,
                               DvmType       *ElmTypePtr,
                               DvmType       *ElmNumberPtr,
                               DvmType       *SenderProcPtr,
                               PSRef      *PSRefPtr      );

DVMUSERFUN
double     __callstd   dvtime_(void);

DVMUSERFUN
double     __callstd   dmtime_(void);

DVMUSERFUN
void       __callstd   dvmcom_(void  *DVMCommPtr);

/* -------------------------------------------- */    /*E0006*/

/***********\
*  stdio.c  *
\***********/    /*E0007*/

/*   ANSI   */    /*E0008*/

DVMUSERFUN
void      dvm_clearerr(DVMFILE *stream);
DVMUSERFUN
int       dvm_fclose(DVMFILE *stream);
DVMUSERFUN
int       dvm_feof(DVMFILE *stream); 
DVMUSERFUN
int       dvm_ferror(DVMFILE *stream);
DVMUSERFUN
int       dvm_fflush(DVMFILE *stream);
DVMUSERFUN
int       dvm_fgetc(DVMFILE *stream);
DVMUSERFUN
int       dvm_fgetpos(DVMFILE *stream,fpos_t *pos);
DVMUSERFUN
char     *dvm_fgets(char *string,int n,DVMFILE *stream);
DVMUSERFUN
DVMFILE  *dvm_fopen(const char *filename, const  char *type);
DVMUSERFUN
void      dvm_void_fprintf(DVMFILE *stream, const char *format ,...);
DVMUSERFUN
int       dvm_fprintf(DVMFILE *stream, const char *format ,...);
DVMUSERFUN
int       dvm_fputc(int c, DVMFILE *stream);
DVMUSERFUN
int       dvm_fputs(const char *string, DVMFILE *stream);
DVMUSERFUN
int       dvm_fread(void *buffer,size_t size,size_t count,
                    DVMFILE *stream);
DVMUSERFUN
DVMFILE  *dvm_freopen(const char *filename,const char *type,DVMFILE *stream);
DVMUSERFUN
int       dvm_fscanf(DVMFILE *stream,const char *format,...);
DVMUSERFUN
int       dvm_fseek(DVMFILE *stream, DvmType offset, int origin);
DVMUSERFUN
int       dvm_fsetpos(DVMFILE *stream,const fpos_t *pos);
DVMUSERFUN
DvmType   dvm_ftell(DVMFILE *stream);
DVMUSERFUN
int       dvm_fwrite(const void *buffer,size_t size,size_t count,
                     DVMFILE *stream);
DVMUSERFUN
int       dvm_getc(DVMFILE *stream);
DVMUSERFUN
int       dvm_getchar(void);
DVMUSERFUN
char     *dvm_gets(char *buffer);
DVMUSERFUN
void      dvm_void_printf(const char *format,...);
DVMUSERFUN
int       dvm_printf(const char *format,...);
DVMUSERFUN
int       dvm_putc(int c,DVMFILE *stream);
DVMUSERFUN
int       dvm_putchar(int c);
DVMUSERFUN
int       dvm_puts(const char *string);
DVMUSERFUN
void      dvm_rewind(DVMFILE *stream);
DVMUSERFUN
int       dvm_scanf(const char *format,...);
DVMUSERFUN
void      dvm_setbuf(DVMFILE *stream,char *buffer);
DVMUSERFUN
int       dvm_setvbuf(DVMFILE *stream,char *buffer,int type,int size);
DVMUSERFUN
DVMFILE  *dvm_tmpfile(void);
DVMUSERFUN
int       dvm_ungetc(int c,DVMFILE *stream);
DVMUSERFUN
void      dvm_void_vfprintf(DVMFILE *stream,const char *format,
                            va_list arg_ptr);
DVMUSERFUN
int       dvm_vfprintf(DVMFILE *stream,const char *format,
                       va_list arg_ptr);
DVMUSERFUN
void      dvm_void_vprintf(const char *format,va_list arg_ptr);
DVMUSERFUN
int       dvm_vprintf(const char *format,va_list arg_ptr);

DVMUSERFUN
int       dvm_remove(const char *filename);
DVMUSERFUN
int       dvm_rename(const char *oldname,const char *newname);
DVMUSERFUN
char     *dvm_tmpnam(char *filename);

/*  TURBO-C  */    /*E0009*/
 
DVMUSERFUN
int       dvm_vscanf(const char *format,va_list arg_ptr);
DVMUSERFUN
int       dvm_vfscanf(DVMFILE *sream,const char *format,va_list arg_ptr);


/* --------------------------------------- */    /*E0010*/

DVMUSERFUN
int   dvm_gzsetparams(DVMFILE *stream, int  level, int  strategy);
DVMUSERFUN
void  dvm_gzflush(DVMFILE *stream, int  flush);

/* --------------------------------------- */    /*E0011*/

/* */    /*E0012*/

DVMUSERFUN
void    __callstd  dvmfopen_(AddrType  *FileNameAddrPtr,
                             AddrType  *RegAddrPtr,
                             AddrType  *DVMFileAddrPtr);
DVMUSERFUN
void   __callstd  dvmfclose_(AddrType  *DVMFileAddrPtr);
DVMUSERFUN
void   __callstd dvmsecread_(AddrType  *DVMFileAddrPtr,
                             DvmType  *ElmTypePtr,
                             DvmType  *RankPtr, DvmType  SizeArray[],
                             DvmType  InitIndexArray[],
                             DvmType  LastIndexArray[],
                             AddrType  *BufAddrPtr, DvmType  *ParPtr,
                             AddrType  *FlagAddrPtr);
DVMUSERFUN
void  __callstd  dvmsecwrite_(AddrType  *DVMFileAddrPtr,
                              DvmType  *ElmTypePtr,
                              DvmType  *RankPtr, DvmType  SizeArray[],
                              DvmType  InitIndexArray[],
                              DvmType  LastIndexArray[],
                              AddrType  *BufAddrPtr, DvmType  *ParPtr,
                              AddrType  *FlagAddrPtr);
DVMUSERFUN
void   __callstd dvmsecwait_(AddrType  *FlagAddrPtr);
DVMUSERFUN
void   __callstd dvmsync_(AddrType  *DVMFileAddrPtr);


/***********\
*  disio.c  *
\***********/    /*E0013*/

DVMUSERFUN
DvmType   dvm_dfread(DvmType      ArrayHeader[],
                     DvmType      Count,
                     DVMFILE  *StreamPtr  );
DVMUSERFUN
DvmType   DisArrRead(DVMFILE  *StreamPtr,
                  DvmType      ArrayHeader[],
                  DvmType      InitIndexArray[],
                  DvmType      LastIndexArray[],
                  DvmType      StepArray[]       );
DVMUSERFUN
DvmType  dvm_dfwrite(DvmType      ArrayHeader[],
                  DvmType      Count,
                  DVMFILE  *StreamPtr  );
DVMUSERFUN
DvmType  DisArrWrite(DVMFILE  *StreamPtr,
                  DvmType      ArrayHeader[],
                  DvmType      InitIndexArray[],
                  DvmType      LastIndexArray[],
                  DvmType      StepArray[]       );


/***********\
*  lowio.c  *
\***********/    /*E0014*/

#ifdef _STRUCT_STAT_
   DVMUSERFUN
   int   dvm_stat(const char *filename,struct stat *buffer);
#endif

#ifdef _DVM_LLIO_

DVMUSERFUN
int         dvm_close(DVMHANDLE *HandlePtr);

   #ifdef _STRUCT_STAT_
      DVMUSERFUN
      int   dvm_fstat(DVMHANDLE *HandlePtr,struct stat *buffer);
   #endif

DVMUSERFUN
DvmType dvm_lseek(DVMHANDLE *HandlePtr,DvmType offset,int origin);
DVMUSERFUN
DVMHANDLE  *dvm_open(const char *filename,int oflag,int mode);
DVMUSERFUN
int         dvm_read(DVMHANDLE *HandlePtr,char *buffer,
                     unsigned int count);
DVMUSERFUN
int         dvm_write(DVMHANDLE *HandlePtr,const void *buffer,
                      unsigned int count);

#endif  /* _DVM_LLIO_ */    /*e0015*/

#ifdef _ACCESS_FUN_
   DVMUSERFUN
   int   dvm_access(const char *filename,int mode);
#endif


/*************\
*  rtl_fun.c  *
\*************/    /*E0016*/

DVMUSERFUN
int     rtl_GetCurrentProc(void);
DVMUSERFUN
int     rtl_GetIOProc(void);
DVMUSERFUN
int     rtl_GetMasterProc(void);
DVMUSERFUN
int     rtl_GetCentralProc(void);
DVMUSERFUN
int     rtl_iprintf(char *format,...);
DVMUSERFUN
int     rtl_printf(char *format,...);
DVMUSERFUN
int     rtl_mprintf(int  ProcNumber,char *format,...);
DVMUSERFUN
int     rtl_fprintf(FILE *stream,char *format,...);
DVMUSERFUN
int     rtl_mfprintf(int  ProcNumber,FILE *stream,char *format,...);


/************\
*  msgpas.c  *
\************/    /*E0017*/

DVMUSERFUN
int     rtl_Send(void *buf, int count, int size, int procnum);
DVMUSERFUN
int     rtl_Recv(void *buf, int count, int size, int procnum);
DVMUSERFUN
int     rtl_Sendnowait(void *buf, int count, int size, int procnum,
                       int tag, RTL_Request *RTL_ReqPtr,
                       int MsgPartition);
DVMUSERFUN
int     rtl_Recvnowait(void *buf, int count, int size, int procnum,
                       int tag, RTL_Request *RTL_ReqPtr,
                       int MsgPartition);
DVMUSERFUN
void    rtl_Waitrequest(RTL_Request *RTL_ReqPtr);
DVMUSERFUN
int     rtl_Testrequest(RTL_Request *RTL_ReqPtr);
DVMUSERFUN
int     rtl_SendA(void *buf, int count, int size, int procnum, int tag);
DVMUSERFUN
int     rtl_RecvA(void *buf, int count, int size, int procnum, int tag);
DVMUSERFUN
void    rtl_BroadCast(void *buf, int count, int size, int SenderProcNum,
                      PSRef *PSRefPtr);
DVMUSERFUN
DvmType    __callstd  bsynch_(void);
DVMUSERFUN
DvmType    __callstd  tsynch_(void);


/***********\
*  trace.c  *
\***********/    /*E0018*/

DVMUSERFUN
int    vtprintf(int  prefix, char  *format, va_list  arg_ptr);
DVMUSERFUN
int    tprintf(char  *format, ... );
DVMUSERFUN
int    pprintf(int  prefix, char  *format, ... );
DVMUSERFUN
void   eprintf(char  *FileName, int  Line, char  *format, ... );
DVMUSERFUN
void   epprintf(int  prefix, char  *FileName, int  Line,
                char  *format, ... );
DVMUSERFUN
void   dvm_trace(int  number, char  *format, ... );
DVMUSERFUN
DvmType  __callstd  fname_(char  *FileNamePtr, int FileNameLength);
DVMUSERFUN
DvmType  __callstd  lnumb_(DvmType *LineNumberPtr);
DVMUSERFUN
DvmType  __callstd  dvmlf_(DvmType *LineNumberPtr,
                           char  *FileNamePtr, int  FileNameLength);
DVMUSERFUN
void   __callstd  tron_(void);
DVMUSERFUN
void   __callstd  troff_(void);


#endif /* _USRFUN_DEC_ */    /*E0019*/
