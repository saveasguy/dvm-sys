#!/bin/sh

# Uses variables: grep, dvmpar, dvmdir, dvmdirW, strrun, dvmout, dvmoutfile, dvmrun, dvmshow, OPTIONCHAR, dvmarithmloopsize

. dvm_utils.sh

PROC_GRID=
PrCount=1
while [ $# -gt 1 ]; do
    arg="$1"
    if is_number "$arg"; then
        PrCount=$(( PrCount * arg ))
        PROC_GRID="$PROC_GRID $arg"
        shift
    else
        break
    fi
done

HOSTS_EXCL=0
if [ -e "exclude_hosts" ]; then
    HOSTS_EXCL=$( cat "exclude_hosts" | $grep -c '[^[:space:]]' )
fi

PERF_EXCL=0
if [ "$1" = "-perf" ]; then
    shift
    if is_number "$1"; then
        PERF_EXCL="$1"
        shift
    fi
fi

prog="$1"
shift

if [ ! -e "$prog" ]; then
    echo "Error: program $prog does not exist."
    exit 1
fi

PrCount=$(( PrCount + HOSTS_EXCL + PERF_EXCL ))

if [ -n "$DVMH_STACKSIZE" ]; then
    dvmcopy=1
fi

taskname="$prog"
export current_par=current.par
if [ -e "usr.par" ]; then
    usr_par="usr.par"
else
    if [ -n "$dvmdirW" ]; then
        usr_par="$dvmdirW\\par\\usr.par"
    else
        usr_par="$dvmdir/par/usr.par"
    fi
fi

if [ "$dvmcopy" = "1" ]; then
    taskname=$( gen_taskname "$prog" "$PrCount" )
    if [ -n "$DVMH_STACKSIZE" ]; then
        echo "#!/bin/sh

ulimit -s $DVMH_STACKSIZE
exec './$taskname.bin' \"\$@\"" >"$taskname"
        chmod a+x "$taskname"
        cp "$prog" "$taskname.bin"
    else
        cp "$prog" "$taskname"
    fi
    if [ -e "$prog.mic" ]; then
        if [ -n "$DVMH_STACKSIZE" ]; then
            echo "#!/bin/sh

ulimit -s $DVMH_STACKSIZE
exec './$taskname.mic.bin' \"\$@\"" >"$taskname.mic"
            chmod a+x "$taskname.mic"
            cp "$prog.mic" "$taskname.mic.bin"
        else
            cp "$prog.mic" "$taskname.mic"
        fi
    fi
    current_par="$taskname.cur.par"
    cp "$usr_par" "$taskname.usr.par"
    usr_par="$taskname.usr.par"
    echo "StatFileName=$taskname.sts;" >>"$usr_par"
fi

:>"$current_par"
nn=0

add_par() {
    echo "CurrentPar[$nn]=$1;" >>"$current_par"
    nn=$(( nn + 1 ))
}

if [ "$dvmpar" != "" ]; then
    add_par "$dvmpar"
fi
add_par "$usr_par"
if [ "$strrun" != "" ]; then
    add_par "$strrun"
fi
if [ "$dvmout" = "off" ]; then
    add_par "+i"
elif [ "$dvmout" = "on" ]; then
    add_par "+io"
fi
if [ "$dvmoutfile" != "" ]; then
    add_par "+odvmstd.out"
    add_par "+edvmstd.err"
fi

for p in $PROC_GRID; do
    add_par "$p"
done

if [ -n "$PROC_GRID" ]; then
    export DVMH_PROC_GRID="$PROC_GRID"
fi

export DVMH_ARGS="dvm $DVMH_ARGS"

if is_number "$dvmarithmloopsize" ; then
    DVMH_ARGS="$DVMH_ARGS ${OPTIONCHAR}arloopsize $dvmarithmloopsize"
fi

if [ "$dvmshow" = "1" ]; then
    DVMH_ARGS="$DVMH_ARGS ${OPTIONCHAR}dvmshow"
fi

if [ "$PERF_EXCL" -gt 0 ]; then
    DVMH_ARGS="$DVMH_ARGS ${OPTIONCHAR}perf $PERF_EXCL"
fi

if [ "$current_par" != "current.par" ]; then
    DVMH_ARGS="$DVMH_ARGS ${OPTIONCHAR}cp $current_par"
fi

export dvmvarlist="$( set | $grep -E "^DVMH_" | $sed 's/=.*//g' | tr "\n" "," | $sed 's/,$//g' )"

if [ "$dvmshow" = "1" ]; then
    echo "dvmvarlist='$dvmvarlist'"
    echo "DVMH_ARGS='$DVMH_ARGS'"
fi

PATH="$PATH:." do_cmd "$dvmrun" $PrCount "$taskname" "$@"
exit $?
